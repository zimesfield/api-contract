openapi: "3.0.0"
info:
  title: Delivery Contract
  version: 1.0.0
security:
  -   oauth: [ jhipster, email, profile ]
  -   openId: [ jhipster, email, profile ]
servers:
  -   url: http://localhost:8082/api
tags:
  -   name: DeliveryResource
      description: Book delivery Request
  -   name: BookingResource
      description: Manage Booking
  -   name: CurrencyResource
      description: Manage Currency
  -   name: AreasPricingResource
      description: Area Resource Pricing Information
  -   name: LocationResource
      description: Location Resource Information
  -   name: PaymentResource
      description: Payment Resource Information
paths:
  /deliveries:
    post:
      operationId: request
      tags:
        - DeliveryResource
      description: Request for a shipment delivery
      requestBody:
        description: Request information and destination detail
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryRequest"
      responses:
        "200":
          description: Registration was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryResponse"
        "403":
          description: You do not have access to this resource
        "405":
          description: This is request is not allowed
      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

    get:
      operationId: getDeliveries
      tags:
        - DeliveryResource
      description: Return the list of deliveries for a logged in user
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all users with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /deliveries/{deliveryId}:
    put:
      operationId: updateDelivery
      tags:
        - DeliveryResource
      description: Modify delivery information
      parameters:
        -   name: deliveryId
            in: path
            description: the uuid of the delivery to view
            schema:
              type: string
              format: uuid
            required: true
      requestBody:
        description: Request information and destination detail
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryRequest"
      responses:
        "200":
          description: Registration was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryResponse"
        "403":
          description: You do not have access to this resource
        "405":
          description: This request is not allowed
      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

    get:
      operationId: getDelivery
      tags:
        - DeliveryResource
      description: Returns a single user information
      parameters:
        -   name: deliveryId
            in: path
            description: the uuid of the delivery to view
            schema:
              type: string
              format: uuid
            required: true
      responses:
        "200":
          description: returns the list of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryResponse"
        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request
  /deliveries/count:
    get:
      operationId: deliveryCount
      tags:
        - DeliveryResource
      description: Returns a total count of delivery based on a user
      parameters:
        -   name: period
            in: query
            description: the uuid of the delivery to view
            schema:
              type: string
              example: DAY
            required: true
        -   name: date
            in: query
            description: the date format for delivery count
            schema:
              type: string
              format: date-time
              example: 2024-08-24T14:30:00Z
            required: true
      responses:
        "200":
          description: returns count of of delivery
          content:
            application/json:
              schema:
                title: DeliveryCount
                type: integer
                format: int64
        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request
  #    /deliveries/{delivery}/status:
  #        put:
  #            operationId: activate
  #            tags:
  #                - DeliveryResource
  #            description: Returns a total count of delivery based on a user
  #            parameters:
  #                -   name: deliveryId
  #                    in: path
  #                    description: the uuid of the delivery to view
  #                    schema:
  #                        type: string
  #                        format: uuid
  #                    required: true
  #            requestBody:
  #                description: Request information and destination detail
  #                content:
  #                    application/json:
  #                        schema:
  #                            $ref: "#/components/schemas/DeliveryRequest"
  #
  #            responses:
  #                "200":
  #                    description: returns total delivery
  #                    content:
  #                        application/json:
  #                            schema:
  #                                title: DeliveryCount
  #                                type: integer
  #                                format: int64
  #
  #                "400":
  #                    description: Request is empty
  #                "405":
  #                    description: Not allowed to make this request

  /areas:
    post:
      operationId: createArea
      tags:
        - AreaResource
      description: Create Area
      requestBody:
        description: The new area to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaRequest'
      responses:
        "200":
          description: get all area with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getAreas
      tags:
        - LocationResource
      description: Returns list of Area
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all area with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AreaResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
  /areas/{id}:
    put:
      operationId: editArea
      tags:
        - AreaResource
      parameters:
        -   name: id
            in: path
            description: the id of the area to edit
            schema:
              type: integer
              format: int64
            required: true

      description: Modify Area
      requestBody:
        description: Modified Area to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaRequest'
      responses:
        "200":
          description: get all area with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getArea
      tags:
        - AreaResource
      parameters:
        -   name: id
            in: path
            description: the id of the currency to view
            schema:
              type: integer
              format: int64
            required: true

      description: Returns Area Pricing with id
      responses:
        "200":
          description: get all area pricing with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
  /countries:
    post:
      operationId: createCountry
      tags:
        - CountryResource
      description: Create Country
      requestBody:
        description: The new area to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryRequest'
      responses:
        "200":
          description: get all country with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: fetchCountries
      tags:
        - CountryResource
      description: Returns list of countries
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all area with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
  /countries/{id}:
    put:
      operationId: editCountry
      tags:
        - CountryResource
      parameters:
        -   name: id
            in: path
            description: the id of the area to edit
            schema:
              type: integer
              format: int64
            required: true

      description: Modify Area
      requestBody:
        description: Modified Area to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaRequest'
      responses:
        "200":
          description: get all area with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getCountry
      tags:
        - CountryResource
      parameters:
        -   name: id
            in: path
            description: the id of the currency to view
            schema:
              type: integer
              format: int64
            required: true

      description: Returns Country Pricing with id
      responses:
        "200":
          description: get all area pricing with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /regions:
    post:
      operationId: createRegion
      tags:
        - RegionResource
      description: Create Region
      requestBody:
        description: The new area to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
      responses:
        "200":
          description: get all regions with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getRegions
      tags:
        - RegionResource
      description: Returns list of region
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all regions with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegionResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
  /regions/{id}:
    put:
      operationId: editRegion
      tags:
        - RegionResource
      parameters:
        -   name: id
            in: path
            description: the id of the region to edit
            schema:
              type: integer
              format: int64
            required: true

      description: Modify Region
      requestBody:
        description: Modified Region to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
      responses:
        "200":
          description: get all region with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getRegion
      tags:
        - RegionResource
      parameters:
        -   name: id
            in: path
            description: the id of the region to view
            schema:
              type: integer
              format: int64
            required: true

      description: Returns region with id
      responses:
        "200":
          description: get all regions with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /pricing:
    post:
      operationId: createAreaPricing
      tags:
        - AreasPricingResource
      description: Create Area Pricing
      requestBody:
        description: The new area price to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaPriceRequest'
      responses:
        "200":
          description: get all area pricing with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaPriceResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getAreaPricings
      tags:
        - AreasPricingResource
      description: Returns list of Area Pricing
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all area pricing with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AreaPriceResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
  /pricing/{id}:
    put:
      operationId: editAreaPricing
      tags:
        - PricingResource
      parameters:
        -   name: id
            in: path
            description: the id of the area price to edit
            schema:
              type: integer
              format: int64
            required: true

      description: Modify Area Pricing
      requestBody:
        description: Modified Area Price to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaPriceRequest'
      responses:
        "200":
          description: get all area pricing with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaPriceResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getAreaPricing
      tags:
        - PricingResource
      parameters:
        -   name: id
            in: path
            description: the id of the currency to view
            schema:
              type: integer
              format: int64
            required: true

      description: Returns Area Pricing with id
      responses:
        "200":
          description: get all area pricing with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaPriceResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /currencies:
    get:
      operationId: getCurrencies
      tags:
        - CurrencyResource
      description: Returns list of currency
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all currency with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyResponse'
        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /currencies/{id}:
    get:
      operationId: getCurrencyById
      tags:
        - CurrencyResource
      description: Modify currency information
      parameters:
        -   name: id
            in: path
            description: the id of the currency to view
            schema:
              type: integer
              format: int64
            required: true
      responses:
        "200":
          description: Registration was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyResponse"
        "403":
          description: You do not have access to this resource
        "405":
          description: This request is not allowed
      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /currencies/code/{currencyCode}:
    put:
      operationId: updateCurrency
      tags:
        - CurrencyResource
      description: Modify currency information
      parameters:
        -   name: currencyCode
            in: path
            description: the international code of the currency to view
            schema:
              type: string
            required: true
      requestBody:
        description: Request information and destination detail
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CurrencyRequest"
      responses:
        "200":
          description: Registration was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyResponse"
        "403":
          description: You do not have access to this resource
        "405":
          description: This request is not allowed
      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

    get:
      operationId: getCurrency
      tags:
        - CurrencyResource
      description: Returns a single currency information
      parameters:
        -   name: currencyCode
            in: path
            description: the international code of the currency to view
            schema:
              type: string
            required: true
      responses:
        "200":
          description: returns currency that matches the uuid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyResponse"
        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

  /payments:
    post:
      operationId: logPayment
      tags:
        - PaymentResource
      description: Log payment information with the transaction Id
      requestBody:
        description: Details of the payment information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDetail"
      responses:
        "200":
          description: Payment logged successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentResponse"
        "403":
          description: You do not have access to this resource
        "405":
          description: This is request is not allowed
      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

    get:
      operationId: getPayments
      tags:
        - PaymentsResource
      description: Returns list of confirmed booking
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all payments with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
  /bookings:
    get:
      operationId: getBookings
      tags:
        - BookingResource
      description: Returns list of confirmed booking
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all bookings with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookingResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /bookings/{deliveryId}/confirm:
    post:
      operationId: confirmBooking
      tags:
        - BookingResource
      description: Confirm delivery request when a user
      parameters:
        -   name: deliveryId
            in: path
            description: the uuid of the delivery to view
            schema:
              type: string
              format: uuid
            required: true
      requestBody:
        description: Request information and destination detail
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingConfirmation"
      responses:
        "201":
          description: Created successful booking that has been paid for.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'
        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request
      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

  /bookings/count:
    get:
      operationId: bookingsCount
      tags:
        - BookingResource
      description: Returns a total count of delivery based on a user
      parameters:
        -   name: period
            in: query
            description: the uuid of the delivery to view
            schema:
              type: string
              example: DAY
            required: true
        -   name: date
            in: query
            description: bookings start date to count
            schema:
              type: string
              format: date-time
              example: 2024-08-24T14:30:00Z
            required: true
      responses:
        "200":
          description: total confirmed booking
          content:
            application/json:
              schema:
                title: DeliveryCount
                type: integer
                format: int64
        "400":
          description: Request is empty
        "403":
          description: Not authorized request
        "405":
          description: Not allowed to make this request

components:
  headers:
    PageResponse:
      schema:
        title: PageResponse
        type: object
        properties:
          totalPages:
            type: integer
          totalElements:
            type: integer
            format: int32
          size:
            type: integer
            example: 10
          pageNumber:
            type: integer
            example: 0
  schemas:
    Pageable:
      title: Pageable
      type: object
      properties:
        pageSize:
          type: integer
          example: 20
          description: Size of the requested page
        pageNumber:
          type: integer
          example: 0
          description: Page number of the requested page
        sort:
          type: string
          example: "id,asc"
          description: |
            Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.

    DeliveryResponsePage:
      description: Delivery response page
      title: DeliveryResponsePage
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryResponse'
    DeliveryRequest:
      type: object
      description: Delivery parcel type
      required:
        - sender
        - receiver
        - items
      properties:
        sender:
          $ref: '#/components/schemas/Customer'
        receiver:
          $ref: '#/components/schemas/Customer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemRequest'
        priority:
          $ref: '#/components/schemas/Priority'
        deliveryType:
          type: string
          example: Document
          enum:
            - Document
            - Parcel
            - HEAVY
    DeliveryResponse:
      type: object
      description: Delivery parcel type
      required:
        - items
        - sender
        - receiver
      properties:
        deliveryId:
          type: string
        sender:
          $ref: '#/components/schemas/Customer'
        receiver:
          $ref: '#/components/schemas/Customer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemResponse'
        priority:
          $ref: '#/components/schemas/Priority'
        amount:
          $ref: '#/components/schemas/Amount'

    BookingConfirmation:
      type: object
      description: Delivery parcel type
      required:
        - transactionId
        - pickupDate
        - deliveryDate
      properties:
        transactionId:
          type: string
          example: "TestTransactionId"
        pickupDate:
          type: string
          format: LocalDateTime
          example: 2024-08-24T14:30
        deliveryDate:
          type: string
          format: LocalDateTime
          example: 2024-08-25T14:30

    BookingResponse:
      type: object
      description: Confirmed booking
      properties:
        deliveryId:
          type: string
        transactionId:
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
        pickupDate:
          type: string
          format: LocalDateTime
        deliveryDate:
          type: string
          format: LocalDateTime
        status:
          $ref: '#/components/schemas/BookingStatus'

    BookingHistory:
      type: object
      description: Delivery parcel type
      properties:
        deliveryId:
          type: string
        activity:
          type: string
          enum:
            - PROCESSING
            - PICKUP
            - PACKAGING
            - SHIPPING
            - DELIVERED
          default: PROCESSING
        parcel:
          $ref: '#/components/schemas/DeliveryResponse'
        description:
          type: string
          example: Request received for delivery

    Amount:
      type: object
      description: Delivery parcel type
      properties:
        currency:
          type: string
          example: NGN
        value:
          type: number
          format: int64

    Area:
      type: object
      description: Area of a state
      properties:
        name:
          type: string
          example: Eti Osa
        code:
          type: string
          example: "0871"

    AreaPriceRequest:
      type: object
      description: AreaPriceRequest
      required:
        - senderArea
        - receiverArea
        - description
        - currency
        - amount
        - expressAmount
        - pickupAmount
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        senderArea:
          $ref: '#/components/schemas/Area'
        receiverArea:
          $ref: '#/components/schemas/Area'
        currency:
          $ref: '#/components/schemas/CurrencyResponse'
        amount:
          type: number
        expressAmount:
          type: number
        pickupAmount:
          type: number

    AreaPriceResponse:
      type: object
      description: AreaPrice
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        senderArea:
          $ref: '#/components/schemas/Area'
        receiverArea:
          $ref: '#/components/schemas/Area'
        currency:
          $ref: '#/components/schemas/CurrencyResponse'
        amount:
          type: number
        expressAmount:
          type: number
        pickupAmount:
          type: number
    CurrencyRequest:
      type: object
      description: CurrencyRequest
      properties:
        code:
          type: string
        name:
          type: string
    CurrencyResponse:
      type: object
      description: CurrencyResponse
      properties:
        id:
          type: integer
          format: int64
        uuid:
          type: integer
          format: int64
        code:
          type: string
        name:
          type: string
    Payment:
      type: object
      description: Payment for delivery
      properties:
        deliveryId:
          type: string
        totalAmount:
          $ref: "#/components/schemas/Amount"
        paymentMode:
          $ref: "#/components/schemas/PaymentMode"
    PaymentDetail:
      type: object
      description: Payment information for delivery
      required:
        - deliveryId
        - transactionId
        - totalAmount
        - paymentMode
      properties:
        deliveryId:
          type: string
          example: ReplaceMe
        transactionId:
          type: string
          example: TestTransactionId
        totalAmount:
          $ref: "#/components/schemas/Amount"
        paymentMode:
          $ref: "#/components/schemas/PaymentMode"

    PaymentResponse:
      type: object
      description: Payment information for delivery
      required:
        - deliveryId
        - transactionId
        - totalAmount
        - paymentMode
      properties:
        deliveryId:
          type: string
        transactionId:
          type: string
        totalAmount:
          $ref: "#/components/schemas/Amount"
        paymentMode:
          $ref: "#/components/schemas/PaymentMode"
        createdAt:
          type: string
          format: LocalDateTime

    PaymentMode:
      type: object
      description: Booking status
      required:
        - mode
      properties:
        mode:
          type: string
          default: TRANSFER
          example: TRANSFER
          enum:
            - TRANSFER
            - CARD
            - CHEQUE
            - CASH

    AreaRequest:
      type: object
      description: Raeda Express coverage area
      required:
        - name
        - code
        - province
      properties:
        name:
          type: string
          example: Asaba
        code:
          type: string
          example: ASA
        province:
          $ref: "#/components/schemas/RegionResponse"

    AreaResponse:
      type: object
      description: Raeda Express coverage area response
      properties:
        id:
          type: number
          example: 223
        name:
          type: string
          example: Owerri
        code:
          type: string
          example: OWR
        province:
          $ref: "#/components/schemas/RegionResponse"

    CountryRequest:
      type: object
      description: Raeda Express coverage country
      required:
        - name
        - code
        - currency
      properties:
        name:
          type: string
          example: Nigeria
        code:
          type: string
          example: NG
        currency:
          $ref: "#/components/schemas/CurrencyResponse"

    CountryResponse:
      type: object
      description: Raeda Express coverage country response
      properties:
        id:
          type: number
          example: 223
        name:
          type: string
          example: Nigeria
        code:
          type: string
          example: NG
        currency:
          type: string
          example: NGN


    RegionRequest:
      type: object
      description: Raeda Express coverage region
      required:
        - name
        - code
        - country
      properties:
        name:
          type: string
          example: DELTA
        code:
          type: string
          example: DEL
        country:
          $ref: "#/components/schemas/CountryResponse"

    RegionResponse:
      type: object
      description: Raeda Express coverage region response
      properties:
        id:
          type: number
          example: 223
        name:
          type: string
          example: DELTA
        code:
          type: string
          example: DEL
        country:
          $ref: "#/components/schemas/CountryResponse"

    BookingStatus:
      type: string
      description: Booking status
      properties:
        status:
          type: string
          enum:
            - PROCESSING
            - SHIPPING
            - DELIVERED

    ItemRequest:
      type: object
      description: Delivery parcel type
      required:
        - name
        - weight
        - quantity
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          example: Laptop
        weight:
          $ref: '#/components/schemas/Weight'
        quantity:
          type: number
          example: 5
        description:
          type: string
          example: Hp Laptops 2024
    ItemResponse:
      type: object
      description: Delivery parcel type
      required:
        - name
        - weight
        - quantity
      properties:
        id:
          type: integer
          format: int64
        uuid:
          type: string
          format: uuid
        name:
          type: string
          example: Laptop
        weight:
          $ref: '#/components/schemas/Weight'
        quantity:
          type: number
          example: 5
        description:
          type: string
          example: Hp Laptops 2024

    Weight:
      type: object
      description: Weight of parcel
      required:
        - mass
        - measurement
      properties:
        mass:
          type: number
          example: 14.0
        measurement:
          type: string
          enum:
            - KG
            - G
          default: KG

    Priority:
      type: object
      description: DeliveryPriority of delivery
      properties:
        express:
          type: boolean
          default: false
          example: true
        pickup:
          type: boolean
          default: true
          example: true

    Address:
      type: object
      description: CustomerModel information
      required:
        - country
        - state
        - area
        - street
        - landmark
      properties:
        country:
          type: string
          default: Nigeria
          example: Nigeria
        state:
          type: string
          example: Lagos
        area:
          $ref: '#/components/schemas/Area'
        street:
          type: string
          example: 5 Aiyetoro street, Ajah
        landmark:
          type: string
          example: Ajah market

    Contact:
      type: object
      description: CustomerModel contact information
      required:
        - phoneNumber
      properties:
        phoneNumber:
          type: string
          example: '0904653622'
        alternatePhoneNumber:
          type: string
          example: '0904353652'
        email:
          type: string
          example: john.doe@raeda.com
    BioData:
      type: object
      description: UserModel BioData
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
    Customer:
      type: object
      description: CustomerModel information
      required:
        - bioData
        - contact
        - address
      properties:
        bioData:
          $ref: '#/components/schemas/BioData'
        contact:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'

    UserInfo:
      type: object
      description: Delivery request details
      properties:
        id:
          type: string
        login:
          type: string
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://zalando.github.io/problem/constraint-violation'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.

  responses:
    Problem:
      description: error occurred - see status code and problem object for more information.
      content:
        'application/problem+json':
          schema:
            $ref: '#/components/schemas/Problem'



  securitySchemes:
    oauth:
      type: oauth2
      description: OAuth2 authentication with KeyCloak
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:9080/realms/jhipster/protocol/openid-connect/auth
          tokenUrl: http://localhost:9080/realms/jhipster/protocol/openid-connect/token
          scopes:
            jhipster: Jhipster specific claims
            email: Email claims
            profile: Profile claims
    openId:
      type: openIdConnect
      description: OpenID Connect authentication with KeyCloak
      openIdConnectUrl: http://localhost:9080/realms/jhipster/.well-known/openid-configuration

