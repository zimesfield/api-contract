openapi: "3.0.0"
info:
  title: Delivery Contract
  version: 1.0.0
security:
  -   oauth: [ jhipster, email, profile ]
  -   openId: [ jhipster, email, profile ]
servers:
  -   url: http://localhost:8082/api
tags:
  -   name: CurrencyResource
      description: Manage Currency
  -   name: AreaResource
      description: Area Resource Information
  -   name: RegionResource
      description: Region Resource Information
  -   name: CountryResource
      description: Country Resource Information
  -   name: PricingResource
      description: Area Resource Pricing Information
  -   name: DeliveryResource
      description: Book delivery Request
  -   name: BookingResource
      description: Manage Booking
  -   name: PaymentResource
      description: Payment Resource Information
paths:
  /deliveries/count:
    get:
      operationId: deliveryCount
      tags:
        - DeliveryResource
      description: Returns a total count of delivery based on a user
      parameters:
        -   name: period
            in: query
            description: the uuid of the delivery to view
            schema:
              type: string
              example: DAY
            required: true
        -   name: date
            in: query
            description: the date format for delivery count
            schema:
              type: string
              format: date-time
              example: 2024-08-24T14:30:00Z
            required: true
      responses:
        "200":
          description: returns count of of delivery
          content:
            application/json:
              schema:
                title: DeliveryCount
                type: integer
                format: int64
        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request
  #    /deliveries/{delivery}/status:
  #        put:
  #            operationId: activate
  #            tags:
  #                - DeliveryResource
  #            description: Returns a total count of delivery based on a user
  #            parameters:
  #                -   name: deliveryId
  #                    in: path
  #                    description: the uuid of the delivery to view
  #                    schema:
  #                        type: string
  #                        format: uuid
  #                    required: true
  #            requestBody:
  #                description: Request information and destination detail
  #                content:
  #                    application/json:
  #                        schema:
  #                            $ref: "#/components/schemas/DeliveryRequest"
  #
  #            schema.yaml:
  #                "200":
  #                    description: returns total delivery
  #                    content:
  #                        application/json:
  #                            schema:
  #                                title: DeliveryCount
  #                                type: integer
  #                                format: int64
  #
  #                "400":
  #                    description: Request is empty
  #                "405":
  #                    description: Not allowed to make this request

  /areas:
    post:
      operationId: createArea
      tags:
        - AreaResource
      description: Create Area
      requestBody:
        description: The new area to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AreaRequest'
      responses:
        "200":
          description: get all area with all the details - calling this are only allowed for the administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AreaResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]
    get:
      operationId: getAreas
      tags:
        - AreaResource
      description: Returns list of Area
      parameters:
        -   name: pageable
            in: query
            description: the pagination information.
            required: true
            schema:
              $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: get all area with all the details - calling this are only allowed for the administrators.
          headers:
            pageable:
              $ref: '#/components/headers/PageResponse'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AreaResponse'

        "400":
          description: Request is empty
        "405":
          description: Not allowed to make this request

      security:
        -   oauth: [ jhipster, email, profile ]
        -   openId: [ jhipster, email, profile ]

components:
  headers:
    PageResponse:
      schema:
        title: PageResponse
        type: object
        properties:
          totalPages:
            type: integer
          totalElements:
            type: integer
            format: int32
          size:
            type: integer
            example: 10
          pageNumber:
            type: integer
            example: 0
  schemas:
    Pageable:
      title: Pageable
      type: object
      properties:
        pageSize:
          type: integer
          example: 20
          description: Size of the requested page
        pageNumber:
          type: integer
          example: 0
          description: Page number of the requested page
        sort:
          type: string
          example: "id,asc"
          description: |
            Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.

    BookingConfirmation:
      type: object
      description: Delivery parcel type
      required:
        - transactionId
        - pickupDate
        - deliveryDate
      properties:
        transactionId:
          type: string
          example: "TestTransactionId"
        pickupDate:
          type: string
          format: LocalDateTime
          example: 2024-08-24T14:30
        deliveryDate:
          type: string
          format: LocalDateTime
          example: 2024-08-25T14:30

    CurrencyRequest:
      type: object
      description: CurrencyRequest
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        name:
          type: string
    CurrencyResponse:
      type: object
      description: CurrencyResponse
      properties:
        id:
          type: integer
          format: int64
        uuid:
          type: integer
          format: int64
        code:
          type: string
        name:
          type: string


    AreaRequest:
      type: object
      description: Raeda Express coverage area
      required:
        - name
        - code
        - province
      properties:
        id:
          type: number
        name:
          type: string
          example: Asaba
        code:
          type: string
          example: ASA
        province:
          $ref: "#/components/schemas/RegionResponse"

    AreaResponse:
      type: object
      description: Raeda Express coverage area response
      properties:
        id:
          type: number
          example: 223
        name:
          type: string
          example: Owerri
        code:
          type: string
          example: OWR
        province:
          $ref: "#/components/schemas/RegionResponse"

    CountryRequest:
      type: object
      description: Raeda Express coverage country
      required:
        - name
        - code
        - currency
      properties:
        id:
          type: number
        name:
          type: string
          example: Nigeria
        code:
          type: string
          example: NG
        currency:
          $ref: "#/components/schemas/CurrencyRequest"
    CountryResponse:
      type: object
      description: Raeda Express coverage country response
      properties:
        id:
          type: number
          example: 223
        name:
          type: string
          example: Nigeria
        code:
          type: string
          example: NG
        currency:
          $ref: "#/components/schemas/CurrencyResponse"


    RegionRequest:
      type: object
      description: Raeda Express coverage region
      required:
        - name
        - code
        - country
      properties:
        id:
          type: number
        name:
          type: string
          example: DELTA
        code:
          type: string
          example: DEL
        country:
          $ref: "#/components/schemas/CountryRequest"

    RegionResponse:
      type: object
      description: Raeda Express coverage region response
      properties:
        id:
          type: number
          example: 223
        name:
          type: string
          example: DELTA
        code:
          type: string
          example: DEL
        country:
          $ref: "#/components/schemas/CountryResponse"

    BookingStatus:
      type: string
      description: Booking status
      properties:
        status:
          type: string
          enum:
            - PROCESSING
            - SHIPPING
            - DELIVERED

    ItemRequest:
      type: object
      description: Delivery parcel type
      required:
        - name
        - weight
        - quantity
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          example: Laptop
        weight:
          $ref: '#/components/schemas/Weight'
        quantity:
          type: number
          example: 5
        description:
          type: string
          example: Hp Laptops 2024
    ItemResponse:
      type: object
      description: Delivery parcel type
      required:
        - name
        - weight
        - quantity
      properties:
        id:
          type: integer
          format: int64
        uuid:
          type: string
          format: uuid
        name:
          type: string
          example: Laptop
        weight:
          $ref: '#/components/schemas/Weight'
        quantity:
          type: number
          example: 5
        description:
          type: string
          example: Hp Laptops 2024

    Weight:
      type: object
      description: Weight of parcel
      required:
        - mass
        - measurement
      properties:
        mass:
          type: number
          example: 14.0
        measurement:
          type: string
          enum:
            - KG
            - G
          default: KG

    Priority:
      type: object
      description: DeliveryPriority of delivery
      properties:
        express:
          type: boolean
          default: false
          example: true
        pickup:
          type: boolean
          default: true
          example: true
    Contact:
      type: object
      description: CustomerModel contact information
      required:
        - phoneNumber
      properties:
        phoneNumber:
          type: string
          example: '0904653622'
        alternatePhoneNumber:
          type: string
          example: '0904353652'
        email:
          type: string
          example: john.doe@raeda.com
    UserInfo:
      type: object
      description: Delivery request details
      properties:
        id:
          type: string
        login:
          type: string
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://zalando.github.io/problem/constraint-violation'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.

  responses:
    Problem:
      description: error occurred - see status code and problem object for more information.
      content:
        'application/problem+json':
          schema:
            $ref: '#/components/schemas/Problem'



  securitySchemes:
    oauth:
      type: oauth2
      description: OAuth2 authentication with KeyCloak
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:9080/realms/jhipster/protocol/openid-connect/auth
          tokenUrl: http://localhost:9080/realms/jhipster/protocol/openid-connect/token
          scopes:
            jhipster: Jhipster specific claims
            email: Email claims
            profile: Profile claims
    openId:
      type: openIdConnect
      description: OpenID Connect authentication with KeyCloak
      openIdConnectUrl: http://localhost:9080/realms/jhipster/.well-known/openid-configuration

