openapi: 3.0.3
info:
  title: Tenant Registration API
  version: 1.1.0
  description: API for registering tenants, validating input, verifying token, and sending notifications in a multi-tenant system.

servers:
  #  - url: '{protocol}://{environment}/services/chat/api'
  - url: '{protocol}://{environment}/api'
    description: Production server
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        default: tenant.zimesfield.com    # Local server
        enum:
          - localhost:8082
          - tenant.zimesfield.com

paths:
  /tenants/register:
    post:
      summary: Register a new tenant
      tags:
        - Tenant
      operationId: registerTenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantRegistrationRequest'
      responses:
        '201':
          description: Tenant successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Tenant already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tenants/{uuid}:
    get:
      summary: Retrieves tenant information
      tags:
        - Tenant
      operationId: getTenantInformation
      parameters:
        - name: uuid
          required: true
          in: path
          schema:
            type: string

      responses:
        '200':
          description: Company information is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'

        '404':
          description: Tenant not found
    put:
      summary: Complete tenant registration
      tags:
        - Tenant
      operationId: updateTenantInformation
      parameters:
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdateRequest'
      responses:
        '202':
          description: Successfully updated Tenant information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '422':
          description: Validation failed

  /tenants/verify-token:
    post:
      summary: Verify registration token sent via email
      tags:
        - Token
      operationId: verifyToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerificationRequest'
      responses:
        '200':
          description: Token is valid
        '400':
          description: Invalid or expired token


components:
  schemas:
    Address:
      type: object
      required:
        - street
        - area
        - state
        - country
      properties:
        houseNumber:
          type: string
          example: 123
        street:
          type: string
          example: My street is here
        area:
          type: string
          example: eti-osa
        state:
          type: string
          example: Lagos
        country:
          type: string
          example: Nigeria

    TenantRegistrationRequest:
      type: object
      required: [tenantName, tenantEmail]
      properties:
        name:
          type: string
          example: "Zimesfield Limited"
        email:
          type: string
          format: email
          example: "test@zimesfield.com"

    TenantUpdateRequest:
      type: object
      required: [phone, address]
      properties:
        phoneNumber:
          type: string
          example: "+2348012345678"
        address:
          $ref: "#/components/schemas/Address"
    Tenant:
      type: object
      properties:
        tenantId:
          type: string
          example: "Zimesfield Limited"
        name:
          type: string
          example: "Zimesfield Limited"
        email:
          type: string
          format: email
          example: "test@zimesfield.com"
        phoneNumber:
          type: string
          example: "+2348012345678"
        createdAt:
          type: string
          format: date-time
          example: "2025-06-04T14:00:00+01:00"
        updatedAt:
          type: string
          format: date-time
          example: "2025-06-04T14:00:00+01:00"
        address:
          $ref: "#/components/schemas/Address"

    TenantValidationRequest:
      type: object
      required:
        - companyName
        - adminEmail
      properties:
        companyName:
          type: string
          example: "Zimsefield Limited"
        adminEmail:
          type: string
          example: "admin@zimes.com"

    TokenVerificationRequest:
      type: object
      required: [token]
      properties:
        token:
          type: string
          example: "abc123-def456"

    EmailRequest:
      type: object
      required:
        - to
        - subject
        - message
      properties:
        to:
          type: string
          format: email
          example: "admin@zimes.com"
        subject:
          type: string
          example: "Welcome to the Tenant Portal"
        message:
          type: string
          example: "Your registration was successful. Hereâ€™s how to log in..."

    TenantResponse:
      type: object
      properties:
        tenantId:
          type: string
          format: base64
          example: "tenant_001xyz"
        companyName:
          type: string
          example: "Zimesfied limited"
        status:
          $ref: "#/components/schemas/TenantStatus"

    TenantStatus:
      type: object
      enum: [ ACTIVE, INACTIVE, SUSPENDED ]
      example: ACTIVE

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
          example: "Registration Successful"
